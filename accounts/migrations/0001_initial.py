# Generated by Django 5.0.4 on 2024-06-15 12:54

import accounts.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.avatar_upload_path, verbose_name='Avatar')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('contacts', models.ManyToManyField(through='accounts.Contact', to='accounts.profile', verbose_name='Contacts')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='from_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_outgoing', to='accounts.profile'),
        ),
        migrations.AddField(
            model_name='contact',
            name='to_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts_incoming', to='accounts.profile'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Project Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('soft_deadline', models.DateTimeField(blank=True, verbose_name='Soft Deadline')),
                ('deadline', models.DateTimeField(blank=True, verbose_name='Final Deadline')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owned_projects', to='accounts.profile', verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='profiles', to='accounts.project', verbose_name='Projects'),
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='project_files/', verbose_name='File')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='accounts.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Project File',
                'verbose_name_plural': 'Project Files',
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.profile')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.project')),
            ],
            options={
                'unique_together': {('member', 'project')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='joined_projects', through='accounts.ProjectMember', to='accounts.profile', verbose_name='Members'),
        ),
        migrations.CreateModel(
            name='ProjectMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_messages', to='accounts.profile', verbose_name='Author')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='accounts.project', verbose_name='Project')),
                ('related_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.projectmessage', verbose_name='Related Comment')),
                ('related_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.projectfile', verbose_name='Related File')),
            ],
            options={
                'verbose_name': 'Project Message',
                'verbose_name_plural': 'Project Messages',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Status Name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='accounts.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statuses',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Task Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('soft_deadline', models.DateTimeField(verbose_name='Soft Deadline')),
                ('deadline', models.DateTimeField(verbose_name='Final Deadline')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_tasks', to='accounts.profile', verbose_name='Creator')),
                ('performer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='performed_tasks', to='accounts.profile', verbose_name='Performer')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='accounts.status', verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='TaskFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_files/', verbose_name='File')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='accounts.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Task File',
                'verbose_name_plural': 'Task Files',
            },
        ),
        migrations.CreateModel(
            name='TaskMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_messages', to='accounts.profile', verbose_name='Author')),
                ('related_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.taskmessage', verbose_name='Related Comment')),
                ('related_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.taskfile', verbose_name='Related File')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='accounts.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Task Message',
                'verbose_name_plural': 'Task Messages',
                'ordering': ['time_create'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('from_profile', 'to_profile')},
        ),
    ]
